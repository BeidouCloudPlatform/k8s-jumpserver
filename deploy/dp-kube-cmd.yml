---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kubecmd
  namespace: kube-system
  labels:
    app: kubecmd
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: kubecmd
  labels:
    app: kubecmd
rules:
  - apiGroups:
      - "*"
    resources:
      - "*"
    verbs:
      - "*"
---
---
apiVersion: v1
kind: Service
metadata:
  name: kubecmd-svc
  namespace: kube-system
  labels:
    app: kubecmd-svc
spec:
  ports:
    - port: 22
      name: ssh
      targetPort: 22
  selector:
    app: "kubecmd"
  type: NodePort

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kubecmd
  namespace: kube-system
  labels:
    app: kubecmd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kubecmd
  template:
    metadata:
      labels:
        app: kubecmd
        regist-jumpserver/enabled: enabled
    spec:
      serviceAccountName: kubecmd
      containers:
      - name: kubecmd
        image: registry.cn-shenzhen.aliyuncs.com/infrastlabs/kube-cmd:latest
        imagePullPolicy: Always      
        # command: ['sh', '-c']
        # args:
        # - tail -f /dev/null
        securityContext:
          privileged: true        
        env:
          - name: SSHD_ENABLE
            value: "true"        
        ports:
        - containerPort: 22
        volumeMounts:
        - name: "docker-sock"           
          mountPath: "/var/run/docker.sock"
          subPath: docker.sock
      restartPolicy: Always
      volumes:
      - name: docker-sock
        hostPath:
          path: /var/run/docker.sock
